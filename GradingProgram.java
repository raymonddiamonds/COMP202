// Language Level Converter line number map: dj*->java. Entries: 76
//     1->12        2->13        3->14        4->15        5->16        6->17        7->18        8->19   
//     9->20       10->21       11->22       12->23       13->24       14->25       15->26       16->27   
//    17->28       18->29       19->30       20->31       21->32       22->33       23->34       24->35   
//    25->36       26->37       27->38       28->39       29->40       30->41       31->42       32->43   
//    33->44       34->45       35->46       36->47       37->48       38->49       39->50       40->51   
//    41->52       42->53       43->54       44->55       45->56       46->57       47->58       48->59   
//    49->60       50->61       51->62       52->63       53->64       54->65       55->66       56->67   
//    57->68       58->69       59->70       60->71       61->72       62->73       63->74       64->75   
//    65->76       66->77       67->78       68->79       69->80       70->81       71->82       72->83   
//    73->84       74->85       75->86       76->87   
public class GradingProgram{
  
  public static void main (final String[] args){
    
    printInput(3.0, 2.5, 1);
    
    //call divide method but don't print result if value is not 0
    final double answer = divide(3.0, 4);
    System.out.println(answer);
    //call getMax method and find larger of the two input values
    final double largerInputResult = getMax(200.0, 1.2);
    System.out.println(largerInputResult);
    //call finalGrade method
    final double grade = finalGrade(28, 16, 38);
    System.out.println(grade);
    
  }  
  
  public static void printInput(final double x, final double y, final double z){
    System.out.println("You entered " + x +", " + y + ", " + z + " ");   
  }
  
  public static double divide (final double value1, final double value2){
    
    //create if statement should for value2 be 0; print error message
    //if value2 is not 0, divide value1 by value 2 and return the variable
    
    if (value2 == 0){
      System.out.println("Error");     
      return 0;
    }     
    else{
      final double result = value1/value2;
      return result;
    }  
    
  }
  
  public static double getMax (final double value1, final double value2){
    
    //make if blocks to return larger of the two input values
    //if both values are equal to each other, return one of the two
    if (value1>value2){
      return value1;
    } 
    else if (value1 == value2){
      return value1;
    }
    else {
      return value2;   
    }
    
    
  }
  
  public static double finalGrade (final double assignmentMark, final double midtermMark, final double finalExamMark){

    //call divide method with using both grading schemes
    
    final double grade1 = assignmentMark + finalExamMark;
    
    final double finalCourseGrade1 = divide(grade1, 0.80);
    final double finalCourseGrade2 = divide((assignmentMark + midtermMark + finalExamMark), 1.0);

    final double result = getMax(finalCourseGrade1, finalCourseGrade2);
    return result;
  }
  
       
     
     
   
  
   
   

  /** This method is automatically generated by the Language Level Converter. */
  public GradingProgram() {
    super();
  }

  /** This method is automatically generated by the Language Level Converter. */
  public java.lang.String toString() {
    return getClass().getName() + "(" + 
        ")";
  }

  /** This method is automatically generated by the Language Level Converter. */
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    else if ((o == null) || (! o.getClass().equals(getClass()))) {
      return false;
    }
    else {
      GradingProgram cast = ((GradingProgram) o);
      return true;
    }
  }

  /** This method is automatically generated by the Language Level Converter. */
  public int hashCode() {
    return getClass().hashCode();
  }
}
